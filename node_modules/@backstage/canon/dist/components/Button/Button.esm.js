import { jsxs, jsx } from 'react/jsx-runtime';
import { forwardRef } from 'react';
import '@remixicon/react';
import { Icon } from '../Icon/Icon.esm.js';
import '../Icon/context.esm.js';
import clsx from 'clsx';
import { useResponsiveValue } from '../../hooks/useResponsiveValue.esm.js';

const Button = forwardRef(
  (props, ref) => {
    const {
      size = "medium",
      variant = "primary",
      disabled,
      iconStart,
      iconEnd,
      children,
      className,
      style,
      ...rest
    } = props;
    const responsiveSize = useResponsiveValue(size);
    const responsiveVariant = useResponsiveValue(variant);
    return /* @__PURE__ */ jsxs(
      "button",
      {
        ref,
        disabled,
        className: clsx("canon-Button", className),
        "data-size": responsiveSize,
        "data-variant": responsiveVariant,
        style,
        ...rest,
        children: [
          iconStart && /* @__PURE__ */ jsx(Icon, { name: iconStart, className: "canon-ButtonIcon" }),
          children,
          iconEnd && /* @__PURE__ */ jsx(Icon, { name: iconEnd, className: "canon-ButtonIcon" })
        ]
      }
    );
  }
);

export { Button, Button as default };
//# sourceMappingURL=Button.esm.js.map
