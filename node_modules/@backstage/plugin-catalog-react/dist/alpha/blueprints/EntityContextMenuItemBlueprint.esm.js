import { jsx, jsxs } from 'react/jsx-runtime';
import { createExtensionBlueprint, coreExtensionData, ExtensionBoundary } from '@backstage/frontend-plugin-api';
import MenuItem from '@material-ui/core/MenuItem';
import ListItemIcon from '@material-ui/core/ListItemIcon';
import ListItemText from '@material-ui/core/ListItemText';
import { useEntityContextMenu } from '../../hooks/useEntityContextMenu.esm.js';

const EntityContextMenuItemBlueprint = createExtensionBlueprint({
  kind: "entity-context-menu-item",
  attachTo: { id: "page:catalog/entity", input: "contextMenuItems" },
  output: [coreExtensionData.reactElement],
  *factory(params, { node }) {
    const loader = async () => {
      const Component = () => {
        const { onMenuClose } = useEntityContextMenu();
        const { title, ...menuItemProps } = params.useProps();
        let handleClick = void 0;
        if ("onClick" in menuItemProps) {
          handleClick = () => {
            const result = menuItemProps.onClick();
            if (result && "then" in result) {
              result.then(onMenuClose, onMenuClose);
            } else {
              onMenuClose();
            }
          };
        }
        return /* @__PURE__ */ jsxs(MenuItem, { ...menuItemProps, onClick: handleClick, children: [
          /* @__PURE__ */ jsx(ListItemIcon, { children: params.icon }),
          /* @__PURE__ */ jsx(ListItemText, { primary: title })
        ] });
      };
      return /* @__PURE__ */ jsx(Component, {});
    };
    yield coreExtensionData.reactElement(ExtensionBoundary.lazy(node, loader));
  }
});

export { EntityContextMenuItemBlueprint };
//# sourceMappingURL=EntityContextMenuItemBlueprint.esm.js.map
