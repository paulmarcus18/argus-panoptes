{"version":3,"file":"StepFinishImportLocation.esm.js","sources":["../../../src/components/StepFinishImportLocation/StepFinishImportLocation.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport { BackButton, ViewComponentButton } from '../Buttons';\nimport { EntityListComponent } from '../EntityListComponent';\nimport { PrepareResult } from '../useImportState';\nimport { Link } from '@backstage/core-components';\nimport partition from 'lodash/partition';\nimport { CompoundEntityRef, DEFAULT_NAMESPACE } from '@backstage/catalog-model';\nimport { entityRouteRef } from '@backstage/plugin-catalog-react';\nimport { useRouteRef } from '@backstage/core-plugin-api';\n\ntype Props = {\n  prepareResult: PrepareResult;\n  onReset: () => void;\n};\n\n// Among the newly registered entities, return a software entity (e.g. Component, API, Resource)\nconst filterComponentEntity = (\n  newLocations: Array<{\n    exists?: boolean;\n    target: string;\n    entities: CompoundEntityRef[];\n  }>,\n): CompoundEntityRef | null => {\n  for (const location of newLocations) {\n    for (const entity of location.entities) {\n      if (\n        ['component', 'api', 'resource'].includes(\n          entity.kind.toLocaleLowerCase('en-US'),\n        )\n      ) {\n        return {\n          kind: entity.kind.toLocaleLowerCase('en-US'),\n          namespace:\n            entity.namespace?.toLocaleLowerCase('en-US') ?? DEFAULT_NAMESPACE,\n          name: entity.name,\n        };\n      }\n    }\n  }\n\n  return null;\n};\n\nexport const StepFinishImportLocation = ({ prepareResult, onReset }: Props) => {\n  const entityRoute = useRouteRef(entityRouteRef);\n\n  if (prepareResult.type === 'repository') {\n    return (\n      <>\n        <Typography paragraph>\n          The following Pull Request has been opened:{' '}\n          <Link\n            to={prepareResult.pullRequest.url}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {prepareResult.pullRequest.url}\n          </Link>\n        </Typography>\n        <Typography paragraph>\n          Your entities will be imported as soon as the Pull Request is merged.\n        </Typography>\n        <Grid container spacing={0}>\n          <BackButton onClick={onReset}>Register another</BackButton>\n        </Grid>\n      </>\n    );\n  }\n\n  const [existingLocations, newLocations] = partition(\n    prepareResult.locations,\n    l => l.exists,\n  );\n  const newComponentEntity = filterComponentEntity(newLocations);\n  return (\n    <>\n      {newLocations.length > 0 && (\n        <>\n          <Typography>\n            The following entities have been added to the catalog:\n          </Typography>\n\n          <EntityListComponent\n            locations={newLocations}\n            locationListItemIcon={() => <LocationOnIcon />}\n            withLinks\n          />\n        </>\n      )}\n      {existingLocations.length > 0 && (\n        <>\n          <Typography>\n            A refresh was triggered for the following locations:\n          </Typography>\n\n          <EntityListComponent\n            locations={existingLocations}\n            locationListItemIcon={() => <LocationOnIcon />}\n            withLinks\n          />\n        </>\n      )}\n      <Grid container spacing={0}>\n        {newComponentEntity && (\n          <ViewComponentButton to={entityRoute(newComponentEntity)}>\n            View Component\n          </ViewComponentButton>\n        )}\n        <BackButton onClick={onReset}>Register another</BackButton>\n      </Grid>\n    </>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;;;AAkCA,MAAM,qBAAA,GAAwB,CAC5B,YAK6B,KAAA;AAC7B,EAAA,KAAA,MAAW,YAAY,YAAc,EAAA;AACnC,IAAW,KAAA,MAAA,MAAA,IAAU,SAAS,QAAU,EAAA;AACtC,MAAA,IACE,CAAC,WAAA,EAAa,KAAO,EAAA,UAAU,CAAE,CAAA,QAAA;AAAA,QAC/B,MAAA,CAAO,IAAK,CAAA,iBAAA,CAAkB,OAAO;AAAA,OAEvC,EAAA;AACA,QAAO,OAAA;AAAA,UACL,IAAM,EAAA,MAAA,CAAO,IAAK,CAAA,iBAAA,CAAkB,OAAO,CAAA;AAAA,UAC3C,SACE,EAAA,MAAA,CAAO,SAAW,EAAA,iBAAA,CAAkB,OAAO,CAAK,IAAA,iBAAA;AAAA,UAClD,MAAM,MAAO,CAAA;AAAA,SACf;AAAA;AACF;AACF;AAGF,EAAO,OAAA,IAAA;AACT,CAAA;AAEO,MAAM,wBAA2B,GAAA,CAAC,EAAE,aAAA,EAAe,SAAqB,KAAA;AAC7E,EAAM,MAAA,WAAA,GAAc,YAAY,cAAc,CAAA;AAE9C,EAAI,IAAA,aAAA,CAAc,SAAS,YAAc,EAAA;AACvC,IAAA,uBAEI,IAAA,CAAA,QAAA,EAAA,EAAA,QAAA,EAAA;AAAA,sBAAC,IAAA,CAAA,UAAA,EAAA,EAAW,WAAS,IAAC,EAAA,QAAA,EAAA;AAAA,QAAA,6CAAA;AAAA,QACwB,GAAA;AAAA,wBAC5C,GAAA;AAAA,UAAC,IAAA;AAAA,UAAA;AAAA,YACC,EAAA,EAAI,cAAc,WAAY,CAAA,GAAA;AAAA,YAC9B,MAAO,EAAA,QAAA;AAAA,YACP,GAAI,EAAA,YAAA;AAAA,YAEH,wBAAc,WAAY,CAAA;AAAA;AAAA;AAC7B,OACF,EAAA,CAAA;AAAA,sBACC,GAAA,CAAA,UAAA,EAAA,EAAW,SAAS,EAAA,IAAA,EAAC,QAEtB,EAAA,uEAAA,EAAA,CAAA;AAAA,sBACA,GAAA,CAAC,IAAK,EAAA,EAAA,SAAA,EAAS,IAAC,EAAA,OAAA,EAAS,CACvB,EAAA,QAAA,kBAAA,GAAA,CAAC,UAAW,EAAA,EAAA,OAAA,EAAS,OAAS,EAAA,QAAA,EAAA,kBAAA,EAAgB,CAChD,EAAA;AAAA,KACF,EAAA,CAAA;AAAA;AAIJ,EAAM,MAAA,CAAC,iBAAmB,EAAA,YAAY,CAAI,GAAA,SAAA;AAAA,IACxC,aAAc,CAAA,SAAA;AAAA,IACd,OAAK,CAAE,CAAA;AAAA,GACT;AACA,EAAM,MAAA,kBAAA,GAAqB,sBAAsB,YAAY,CAAA;AAC7D,EAAA,uBAEK,IAAA,CAAA,QAAA,EAAA,EAAA,QAAA,EAAA;AAAA,IAAa,YAAA,CAAA,MAAA,GAAS,qBAEnB,IAAA,CAAA,QAAA,EAAA,EAAA,QAAA,EAAA;AAAA,sBAAA,GAAA,CAAC,cAAW,QAEZ,EAAA,wDAAA,EAAA,CAAA;AAAA,sBAEA,GAAA;AAAA,QAAC,mBAAA;AAAA,QAAA;AAAA,UACC,SAAW,EAAA,YAAA;AAAA,UACX,oBAAA,EAAsB,sBAAM,GAAA,CAAC,cAAe,EAAA,EAAA,CAAA;AAAA,UAC5C,SAAS,EAAA;AAAA;AAAA;AACX,KACF,EAAA,CAAA;AAAA,IAED,iBAAA,CAAkB,MAAS,GAAA,CAAA,oBAExB,IAAA,CAAA,QAAA,EAAA,EAAA,QAAA,EAAA;AAAA,sBAAA,GAAA,CAAC,cAAW,QAEZ,EAAA,sDAAA,EAAA,CAAA;AAAA,sBAEA,GAAA;AAAA,QAAC,mBAAA;AAAA,QAAA;AAAA,UACC,SAAW,EAAA,iBAAA;AAAA,UACX,oBAAA,EAAsB,sBAAM,GAAA,CAAC,cAAe,EAAA,EAAA,CAAA;AAAA,UAC5C,SAAS,EAAA;AAAA;AAAA;AACX,KACF,EAAA,CAAA;AAAA,oBAED,IAAA,CAAA,IAAA,EAAA,EAAK,SAAS,EAAA,IAAA,EAAC,SAAS,CACtB,EAAA,QAAA,EAAA;AAAA,MAAA,kBAAA,wBACE,mBAAoB,EAAA,EAAA,EAAA,EAAI,WAAY,CAAA,kBAAkB,GAAG,QAE1D,EAAA,gBAAA,EAAA,CAAA;AAAA,sBAED,GAAA,CAAA,UAAA,EAAA,EAAW,OAAS,EAAA,OAAA,EAAS,QAAgB,EAAA,kBAAA,EAAA;AAAA,KAChD,EAAA;AAAA,GACF,EAAA,CAAA;AAEJ;;;;"}