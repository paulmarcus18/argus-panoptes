import { jsx, jsxs, Fragment } from 'react/jsx-runtime';
import Button from '@material-ui/core/Button';
import Typography from '@material-ui/core/Typography';
import { EmptyState, CodeSnippet } from '@backstage/core-components';

const EXAMPLE = `import { createPlugin } from '@backstage/core-plugin-api';

export default createPlugin({
  id: 'plugin-name',
  featureFlags: [{ name: 'enable-example-feature' }],
});
`;
const EmptyFlags = () => /* @__PURE__ */ jsx(
  EmptyState,
  {
    missing: "content",
    title: "No Feature Flags",
    description: "Feature Flags make it possible for plugins to register features in Backstage for users to opt into. You can use this to split out logic in your code for manual A/B testing, etc.",
    action: /* @__PURE__ */ jsxs(Fragment, { children: [
      /* @__PURE__ */ jsx(Typography, { variant: "body1", children: "An example for how to add a feature flag is highlighted below:" }),
      /* @__PURE__ */ jsx(
        CodeSnippet,
        {
          text: EXAMPLE,
          language: "typescript",
          showLineNumbers: true,
          highlightedNumbers: [6],
          customStyle: { background: "inherit", fontSize: "115%" }
        }
      ),
      /* @__PURE__ */ jsx(
        Button,
        {
          variant: "contained",
          color: "primary",
          href: "https://backstage.io/docs/api/utility-apis",
          children: "Read More"
        }
      )
    ] })
  }
);

export { EmptyFlags };
//# sourceMappingURL=EmptyFlags.esm.js.map
