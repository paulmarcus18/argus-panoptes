'use strict';

var lazy = require('../../lib/lazy.cjs.js');

function registerPackageCommands(command) {
  command.command("clean").description("Delete cache directories").action(lazy.lazy(() => import('./commands/package/clean.cjs.js'), "default"));
  command.command("prepack").description("Prepares a package for packaging before publishing").action(lazy.lazy(() => import('./commands/package/pack.cjs.js'), "pre"));
  command.command("postpack").description("Restores the changes made by the prepack command").action(lazy.lazy(() => import('./commands/package/pack.cjs.js'), "post"));
}
function registerRepoCommands(command) {
  command.command("fix").description("Automatically fix packages in the project").option(
    "--publish",
    "Enable additional fixes that only apply when publishing packages"
  ).option(
    "--check",
    "Fail if any packages would have been changed by the command"
  ).action(lazy.lazy(() => import('./commands/repo/fix.cjs.js'), "command"));
  command.command("clean").description("Delete cache and output directories").action(lazy.lazy(() => import('./commands/repo/clean.cjs.js'), "command"));
  command.command("list-deprecations").description("List deprecations").option("--json", "Output as JSON").action(lazy.lazy(() => import('./commands/repo/list-deprecations.cjs.js'), "command"));
}

exports.registerPackageCommands = registerPackageCommands;
exports.registerRepoCommands = registerRepoCommands;
//# sourceMappingURL=index.cjs.js.map
